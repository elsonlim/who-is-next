{"version":3,"sources":["Components/Header.js","Commons/MemberItem.js","Components/Members.js","Components/NameSelector.js","Components/PairNames.js","Components/Pairs.js","Components/Speedback.js","App.js","serviceWorker.js","index.js"],"names":["SideLink","props","react_default","a","createElement","react_router_dom","Object","assign","exact","className","isActive","children","Header","id","Navbar","color","dark","to","data-testid","Header_SideLink","MemberItem","_ref","member","members","setMembers","concat","name","onClick","checked","toConsumableArray","toggleCheckbox","title","filteredMember","filter","cur","Members","_useState","useState","_useState2","slicedToArray","newMemberName","setNewMemberName","membersSelection","map","MemberItem_MemberItem","key","aria-label","onChange","event","target","value","Button","length","findIndex","toLowerCase","alert","newMembers","renderMembers","getRandomiseNameList","names","weight","Math","random","sort","b","nameObj","NameHistory","initFromStorage","JSON","parse","localStorage","getItem","NameSelector","_ref2","curMembers","setCurMembers","_useState3","_useState4","randomMembersList","setRandomMembersList","_useState5","_useState6","nameHistory","setNameHistory","_useState7","_useState8","display","setDisplay","saveRandomMembersList","setItem","stringify","saveNameHistory","useEffect","checkedNames","reduce","acc","push","newRandomList","includes","shouldShuffle","combineList","forEach","memberNameList","curMember","shift","newNameList","arr","arguments","undefined","resetHistory","NameSelector_NameHistory","PairNames","name1","name2","Pairs","randomePairs","setRandomPairs","pairs","i","PairNames_PairNames","getPairs","randomMembers","Speedback","speedbackPairsSet","setSpeedbackPairsSet","pageIndex","setPageIndex","pair","pairsSet","membersArr","timesToRotate","timesToPair","round","output","set","k","lastIndex","memberToRotate","splice","getSpeedbackPairs","extractCheckedMembers","getMembersInitialVal","App","Header_Header","react_router","path","component","NameSelector_NameSelector","Pairs_Pairs","Speedback_Speedback","Members_Members","AppWithRouter","App_App","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7f3593d6.chunk.js","sourcesContent":["import React from \"react\";\nimport { Navbar } from \"reactstrap\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport \"./Header.css\";\n\nconst SideLink = (props) => {\n  const getClassName = (isActive) => {\n    return isActive ? \"header-link--sideText-active\" : \"header-link--sideText\";\n  };\n  return (\n    <NavLink exact className={getClassName} {...props}>\n      {props.children}\n    </NavLink>\n  );\n};\n\nexport const Header = () => {\n  return (\n    <div id=\"main-header\">\n      <Navbar color=\"primary\" dark>\n        <Link className=\"header-link--title\" to=\"/\">\n          WHO IS NEXT\n        </Link>\n        <div data-testid=\"side\">\n          <SideLink to=\"/\">Who is next</SideLink>\n          <SideLink to=\"/pairs\">Pairs</SideLink>\n          <SideLink to=\"/speedback\">Speedback</SideLink>\n        </div>\n      </Navbar>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const MemberItem = ({ member, members, setMembers }) => {\n  const toggleCheckbox = member => {\n    member.checked = !member.checked;\n    setMembers([...members]);\n  };\n\n  return (\n    <div className=\"member-item\">\n      <div\n        className=\"member-item__checkbox-container\"\n        data-testid={`checkbox-${member.name}`}\n        onClick={() => toggleCheckbox(member)}\n      >\n        {member.checked && (\n          <div title=\"unselect\" className=\"tick\">\n            &#10003;\n          </div>\n        )}\n      </div>\n      <div className=\"member-item__name\">{member.name}</div>\n      <div\n        className=\"member-item__delete\"\n        data-testid={`delete-${member.name}`}\n        onClick={() => {\n          const filteredMember = members.filter(\n            cur => cur.name !== member.name\n          );\n          setMembers([...filteredMember]);\n        }}\n      >\n        &#10008;\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { MemberItem } from \"../Commons/MemberItem\";\nimport { Button } from \"reactstrap\";\nimport \"./Member.css\";\n\nexport const Members = ({ members, setMembers }) => {\n  const [newMemberName, setNewMemberName] = useState(\"\");\n\n  const renderMembers = () => {\n    const membersSelection = members.map(member => (\n      <MemberItem\n        key={member.name}\n        member={member}\n        members={members}\n        setMembers={setMembers}\n      />\n    ));\n\n    const addMember = () => {\n      if (\n        newMemberName.length < 2 ||\n        members.findIndex(\n          a => a.name.toLowerCase() === newMemberName.toLowerCase()\n        ) >= 0\n      ) {\n        alert(\"invalid/duplicate name\");\n        return;\n      }\n      const newMembers = [...members, { name: newMemberName, checked: true }];\n      setMembers(newMembers);\n      setNewMemberName(\"\");\n    };\n\n    return (\n      <div id=\"members\">\n        <h2>Members</h2>\n        <input\n          data-testid=\"add-member\"\n          aria-label=\"members-name\"\n          onChange={event => {\n            setNewMemberName(event.target.value);\n          }}\n          value={newMemberName}\n        />\n        <Button data-testid={\"add-btn\"} color=\"primary\" onClick={addMember}>\n          Add\n        </Button>\n        {membersSelection}\n      </div>\n    );\n  };\n\n  return <div>{renderMembers()}</div>;\n};\n","import React, { useState, useEffect } from \"react\";\n// import Button from \"../Commons/Button\";\nimport { Button } from \"reactstrap\";\n\nimport \"./NameSelector.css\";\nexport const getRandomiseNameList = (names) => {\n  return names\n    .map((name) => ({\n      name,\n      weight: Math.random(),\n    }))\n    .sort((a, b) => a.weight - b.weight)\n    .map((nameObj) => nameObj.name);\n};\n\nexport const NameHistory = ({ names }) => {\n  return (\n    <div className={\"name-history\"}>\n      <h3 className={\"name-history__title\"}>History</h3>\n      {names.map((name) => {\n        return <p key={name}>{name}</p>;\n      })}\n    </div>\n  );\n};\n\nconst Local_Random_Member_list = \"randomMemberList\";\nconst Local_History_Key = \"nameHistory\";\n\nconst initFromStorage = (key) => {\n  return JSON.parse(localStorage.getItem(key)) || [];\n};\n\nexport const NameSelector = ({ members }) => {\n  const noMemberDisplay = \"Add or Checked Names\";\n  const startingDisplay = \"WHO IS NEXT?\";\n\n  const [curMembers, setCurMembers] = useState([]);\n  const [randomMembersList, setRandomMembersList] = useState(\n    initFromStorage(Local_Random_Member_list)\n  );\n  const [nameHistory, setNameHistory] = useState(\n    initFromStorage(Local_History_Key)\n  );\n  const [display, setDisplay] = useState(startingDisplay);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const saveRandomMembersList = (members) => {\n    localStorage.setItem(Local_Random_Member_list, JSON.stringify(members));\n    setRandomMembersList(members);\n  };\n\n  const saveNameHistory = (members) => {\n    localStorage.setItem(Local_History_Key, JSON.stringify(members));\n    setNameHistory(members);\n  };\n\n  useEffect(() => {\n    if (curMembers !== members) {\n      setCurMembers(members);\n      const checkedNames = members.reduce((acc, cur) => {\n        if (cur && cur.checked) {\n          acc.push(cur.name);\n        }\n        return acc;\n      }, []);\n\n      let newRandomList = randomMembersList.filter((member) =>\n        checkedNames.includes(member)\n      );\n\n      let shouldShuffle = false;\n      const combineList = [...randomMembersList, ...nameHistory];\n      checkedNames.forEach((name) => {\n        if (!combineList.includes(name)) {\n          newRandomList.push(name);\n          shouldShuffle = true;\n        }\n      });\n\n      if (shouldShuffle) {\n        newRandomList = getRandomiseNameList(newRandomList);\n      }\n      saveRandomMembersList(newRandomList);\n    }\n  }, [\n    curMembers,\n    members,\n    nameHistory,\n    randomMembersList,\n    saveRandomMembersList,\n  ]);\n\n  const resetHistory = (arr = []) => saveNameHistory([...arr]);\n\n  const getName = () => {\n    const memberNameList = members\n      .filter((member) => member.checked)\n      .map((member) => member.name);\n\n    if (!memberNameList.length) {\n      setDisplay(noMemberDisplay);\n    } else if (randomMembersList.length) {\n      const curMember = randomMembersList.shift();\n      setDisplay(curMember);\n      saveRandomMembersList([...randomMembersList]);\n      saveNameHistory([curMember, ...nameHistory]);\n    } else {\n      const newNameList = getRandomiseNameList(memberNameList);\n      saveRandomMembersList([...newNameList]);\n      setDisplay(startingDisplay);\n      resetHistory();\n    }\n  };\n\n  return (\n    <div data-testid=\"name-selector\">\n      <div className={\"name-selector__display\"}>{display}</div>\n      <div>\n        <Button\n          className={\"name-selector__button\"}\n          data-testid={\"getName-btn\"}\n          color=\"primary\"\n          onClick={getName}\n        >\n          getName\n        </Button>\n        <NameHistory names={nameHistory} />\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./PairNames.css\";\n\nexport const PairNames = ({ name1, name2 }) => {\n  return (\n    <div className={\"pair-names\"}>\n      {name1 && <span className={name2 && \"left\"}>{name1}</span>}\n      {name1 && name2 && <span className={\"connector\"}>&</span>}\n      {name2 && <span className={name1 && \"right\"}>{name2}</span>}\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"reactstrap\";\nimport { PairNames } from \"./PairNames\";\nimport \"./Pairs.css\";\n\nconst getPairs = (members) => {\n  const pairs = [];\n  for (let i = 0; i < members.length; i += 2) {\n    pairs.push(\n      <PairNames\n        key={i}\n        name1={members[i].name}\n        name2={members[i + 1] && members[i + 1].name}\n      />\n    );\n  }\n  return pairs;\n};\n\nexport const Pairs = ({ members }) => {\n  const [randomePairs, setRandomPairs] = useState([]);\n\n  const assignMembersToPairs = () => {\n    const randomMembers = members\n      .filter((member) => !!member.checked)\n      .map((name) => ({\n        name,\n        weight: Math.random(),\n      }))\n      .sort((a, b) => a.weight - b.weight)\n      .map((nameObj) => nameObj.name);\n\n    setRandomPairs(randomMembers);\n  };\n\n  return (\n    <section>\n      {!randomePairs.length ? (\n        <div className={\"pairs__title\"}>Pair who</div>\n      ) : (\n        <div className={\"pairs__pairedNames\"}>{getPairs(randomePairs)}</div>\n      )}\n\n      <Button\n        className={\"pairs__button\"}\n        color=\"primary\"\n        onClick={assignMembersToPairs}\n      >\n        Get Pairs\n      </Button>\n    </section>\n  );\n};\n\nPairs.propTypes = {\n  members: PropTypes.array.isRequired,\n};\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"reactstrap\";\nimport { PairNames } from \"./PairNames\";\nimport \"./Speedback.css\";\nimport { Timer } from \"./Timer\";\n\nexport const extractCheckedMembers = (members) => {\n  const checkedMembers = members\n    .filter((member) => !!member.checked)\n    .map((member) => {\n      return member.name;\n    });\n\n  return checkedMembers;\n};\n\nexport const getSpeedbackPairs = (members) => {\n  const membersArr = [...members];\n\n  if (membersArr.length % 2 === 1) {\n    membersArr.push(undefined);\n  }\n\n  const timesToRotate = membersArr.length - 1;\n  const timesToPair = Math.round(membersArr.length / 2);\n  const output = [];\n\n  for (let i = 0; i < timesToRotate; i++) {\n    const set = [];\n    for (let k = 0; k < timesToPair; k++) {\n      const lastIndex = membersArr.length - 1;\n      const pair = [membersArr[k], membersArr[lastIndex - k]];\n      set.push(pair);\n    }\n    output.push(set);\n    const memberToRotate = membersArr.splice(1, 1);\n    membersArr.push(memberToRotate.shift());\n  }\n\n  return output;\n};\n\nexport const Speedback = ({ members }) => {\n  const [speedbackPairsSet, setSpeedbackPairsSet] = useState([]);\n  const [pageIndex, setPageIndex] = useState(-1);\n\n  const onClickSpeedbackButton = () => {\n    if (pageIndex < 0) {\n      const extractedMembers = extractCheckedMembers(members);\n      const pairsSet = getSpeedbackPairs(extractedMembers);\n      setSpeedbackPairsSet(pairsSet);\n      setPageIndex(0);\n    } else if (pageIndex < speedbackPairsSet.length - 1) {\n      setPageIndex(pageIndex + 1);\n    } else {\n      setSpeedbackPairsSet([]);\n      setPageIndex(-1);\n    }\n  };\n\n  return (\n    <section>\n      <div className={\"pairs-container\"}>\n        {!!speedbackPairsSet.length &&\n          pageIndex >= 0 &&\n          pageIndex < speedbackPairsSet.length &&\n          speedbackPairsSet[pageIndex].map((pair) => {\n            return (\n              <PairNames\n                key={`${pair[0]}-${pair[1]}`}\n                name1={pair[0]}\n                name2={pair[1]}\n              />\n            );\n          })}\n      </div>\n\n      {pageIndex > 0 && (\n        <Button\n          className={\"section__button\"}\n          color=\"secondary\"\n          onClick={() => setPageIndex(pageIndex - 1)}\n        >\n          previous\n        </Button>\n      )}\n      <Button\n        className={\"section__button\"}\n        color=\"primary\"\n        onClick={onClickSpeedbackButton}\n      >\n        {pageIndex < 0 ? \"start\" : \"next\"}\n      </Button>\n      <div>\n        {speedbackPairsSet.length\n          ? `${pageIndex + 1}/${speedbackPairsSet.length}`\n          : \"\"}\n      </div>\n      {/* <Timer /> */}\n    </section>\n  );\n};\n\nSpeedback.propTypes = {\n  members: PropTypes.array.isRequired,\n};\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { Header } from \"./Components/Header\";\nimport { Members } from \"./Components/Members\";\nimport { NameSelector } from \"./Components/NameSelector\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { Pairs } from \"./Components/Pairs\";\nimport { Speedback } from \"./Components/Speedback\";\n\nconst getMembersInitialVal = () => {\n  return JSON.parse(localStorage.getItem(\"members\")) || [];\n};\n\nfunction App() {\n  const [members, setMembers] = useState(getMembersInitialVal());\n\n  const saveMembers = (members) => {\n    setMembers(members);\n    localStorage.setItem(\"members\", JSON.stringify(members));\n  };\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className={\"name-selector\"}>\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            component={() => <NameSelector members={members} />}\n          />\n          <Route\n            exact\n            path=\"/pairs\"\n            component={() => <Pairs members={members} />}\n          />\n          <Route\n            exact\n            path=\"/speedback\"\n            component={() => <Speedback members={members} />}\n          />\n          <Redirect to=\"/\" />\n        </Switch>\n        <Members members={members} setMembers={saveMembers} />\n      </div>\n    </div>\n  );\n}\n\nconst AppWithRouter = () => (\n  <div>\n    <Router>\n      <App />\n    </Router>\n  </div>\n);\n\nexport default AppWithRouter;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}